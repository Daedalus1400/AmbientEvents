package com.daedalus.ambientevents;

import java.util.Random;
import java.util.ArrayList;

import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.Logger;

import net.minecraft.entity.effect.EntityLightningBolt;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.potion.PotionEffect;
import net.minecraftforge.event.entity.player.PlayerWakeUpEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.PlayerEvent.PlayerLoggedInEvent;
import net.minecraftforge.fml.common.gameevent.PlayerEvent.PlayerLoggedOutEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent.ClientTickEvent;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

import com.daedalus.ambientevents.conditions.*;
import com.daedalus.ambientevents.events.*;
import com.daedalus.ambientevents.actions.*;

import org.json.*;

public class EventHandler {
	
	// Client side event handler
	
	public EntityPlayer player;

	protected int tick = -1;
	protected Random random = new Random();
	protected boolean active = false;
	
	protected ArrayList<MasterEvent> events;
	
	// Tracking Variables
	public long lastSleep = 0;
	
	public void init() {
		JSONObject eventsJSON = new JSONObject(Config.eventsRaw);
		while (eventsJSON.keys().hasNext()) {
			
		}
	}
	
	@SubscribeEvent
	public void onWakeUp(PlayerWakeUpEvent e) {
		if (e.getEntityPlayer() == player) {
			lastSleep = player.world.getTotalWorldTime();
		}
	}
	
	@SubscribeEvent
	public void onLogon(PlayerLoggedInEvent e) {
		player = e.player;
		
		// TODO Change this to get data from world save
		lastSleep = player.world.getTotalWorldTime();
		
		active = true;
	}
	
	@SubscribeEvent
	public void onLogoff(PlayerLoggedOutEvent e) {
		active = false;
	}
	
	@SubscribeEvent
	public void onTick(ClientTickEvent e) {
		if (active) {
			tick++;
			
			for (int i = tick; i < events.size(); i += 20) {
				events.get(i).process(player);
			}
			
			if (tick == 20) {
				tick = 0;
			}
		}
	}
}
